class Solution {
    public ListNode mergeTwoListsRec(ListNode list1, ListNode list2) {
        if(list1 == null) return list2;
        if(list2 == null) return list1;

        if(list1.val <= list2.val){
            list1.next = mergeTwoLists(list1.next,list2);
            return list1;
        } else {
            list2.next = mergeTwoLists(list1,list2.next);
            return list2;
        }
    }

    public ListNode mergeTwoListsIter(ListNode list1, ListNode list2) {
        ListNode newHead = new ListNode(-1);
        ListNode res = newHead;
        while(list1 != null && list2 != null) {
            if(list1.val <= list2.val){
                newHead.next = list1;
                list1 = list1.next;
            } else {
                newHead.next = list2;
                list2 = list2.next;
            }
            newHead = newHead.next;
        }
        if(list1 == null && list2 != null) 
            newHead.next = list2;
        else if(list2 == null && list1 != null) 
            newHead.next = list1;
        
        return res.next;
    }
}